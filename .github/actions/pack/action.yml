name: 'Pack .NET Project for NuGet'
description: 'This action packs a Kr.Common project into a NuGet package.'

inputs:
  PROJECT-PATH:
    description: 'Path to the .NET project file (e.g., ./Kr.Common.csproj)'
    required: true
    default: './Kr.Common/Kr.Common.csproj'
  PROJECT-OUTPUT-DIRECTORY:
    description: 'Path to the .NET project output directory (e.g., ./output)'
    required: true
    default: './output'
  DOTNET-VERSION:
    description: 'Version of .NET SDK to use'
    required: false
    default: '8.0.x'
  NUSPEC-FILE:
    description: 'Path to the nuspec file (e.g., ./Krypton.Common.nuspec)'
    required: false
    default: './Krypton.Common.nuspec'
  NUGET-VERSION:
    description: 'Version of the NuGet package'
    required: true

runs:
  using: composite
  steps:
    - name: Setup NuGet
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: 'latest'

    - name: Create output directory
      run: |
        mkdir -p ${{ inputs.PROJECT-OUTPUT-DIRECTORY }}
      shell: bash

    - name: Pack .NET Project
      env:
        DOTNET_VERSION: ${{ inputs.DOTNET-VERSION }}
        NUGET_VERSION: ${{ inputs.NUGET-VERSION }}
      run: |
        echo "Setting up .NET SDK version: $DOTNET_VERSION"
        dotnet --version
        echo "Package version: $NUGET_VERSION"
        
        dotnet pack ${{ inputs.PROJECT-PATH }} \
          --configuration Release \
          --no-build \
          --output ${{ inputs.PROJECT-OUTPUT-DIRECTORY }} \
          --verbosity normal \
          -p:PackageVersion=$NUGET_VERSION \
          -p:Version=$NUGET_VERSION
      shell: bash

    - name: List generated packages
      run: |
        echo "Generated packages:"
        ls -la ${{ inputs.PROJECT-OUTPUT-DIRECTORY }}
      shell: bash

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Kr.Common.nupkg
        path: ${{ inputs.PROJECT-OUTPUT-DIRECTORY }}/*.nupkg
        if-no-files-found: error